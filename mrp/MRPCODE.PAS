
{ Code pour Mister Patate }
unit MrpCode;

interface

const
  SpriteCode: array[0..7,0..255] of Byte = (
($00,$00,$00,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$0C,$0C,$04,$04,$0C,$0C,$04,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$0C,$0C,$0C,$0C,$0C,$0C,$04,$00,$00,$00,$00,
 $00,$00,$04,$04,$04,$03,$03,$12,$12,$03,$03,$04,$04,$04,$00,$00,
 $00,$04,$11,$11,$11,$11,$10,$10,$10,$10,$11,$11,$11,$11,$04,$00,
 $00,$00,$04,$04,$1B,$1B,$1B,$1B,$1B,$1B,$1B,$1B,$04,$04,$00,$00,
 $00,$00,$04,$1B,$08,$08,$08,$08,$08,$08,$08,$08,$1B,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$18,$18,$18,$18,$18,$18,$18,$18,$08,$04,$00,$00,
 $00,$00,$04,$08,$18,$18,$18,$08,$08,$18,$18,$18,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$19,$19,$19,$19,$19,$19,$19,$19,$19,$19,$04,$00,$00,
 $00,$00,$04,$19,$19,$1A,$19,$19,$19,$19,$1A,$19,$19,$04,$00,$00,
 $00,$00,$04,$19,$19,$19,$1A,$1A,$1A,$1A,$19,$19,$19,$04,$00,$00,
 $00,$00,$00,$04,$19,$19,$19,$19,$19,$19,$19,$19,$04,$00,$00,$00,
 $00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00,
 $00,$00,$00,$04,$12,$12,$12,$12,$12,$12,$12,$12,$04,$00,$00,$00,
 $00,$00,$04,$12,$12,$08,$08,$08,$08,$08,$08,$12,$12,$04,$00,$00,
 $00,$04,$12,$12,$08,$08,$08,$08,$08,$08,$08,$08,$12,$12,$04,$00,
 $00,$04,$12,$08,$08,$0E,$0E,$08,$08,$0E,$0E,$08,$08,$12,$04,$00,
 $04,$12,$12,$08,$08,$0E,$04,$08,$08,$04,$0E,$08,$08,$12,$12,$04,
 $04,$12,$12,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$12,$12,$04,
 $04,$12,$12,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$12,$12,$04,
 $04,$12,$12,$08,$08,$1A,$08,$08,$08,$08,$1A,$08,$08,$12,$12,$04,
 $04,$12,$12,$08,$08,$08,$1A,$1A,$1A,$1A,$08,$08,$08,$12,$12,$04,
 $04,$12,$12,$04,$08,$08,$08,$08,$08,$08,$08,$08,$04,$12,$12,$04,
 $00,$04,$04,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$04,$04,$04),
($00,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$00,
 $00,$00,$04,$1D,$1D,$04,$04,$1D,$1D,$04,$04,$1D,$1D,$04,$00,$00,
 $00,$00,$04,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$04,$00,$00,
 $00,$00,$04,$1D,$0E,$0E,$1D,$1D,$0E,$1D,$1D,$1D,$1D,$04,$00,$00,
 $00,$00,$04,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$04,$00,$00,
 $00,$00,$00,$04,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$04,$00,$00,$00,
 $00,$00,$04,$1E,$08,$08,$08,$08,$08,$08,$08,$08,$1E,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$0E,$0E,$08,$08,$0E,$0E,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$0E,$04,$08,$08,$04,$0E,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$04,$00,$00,
 $00,$00,$04,$1E,$1E,$1E,$1A,$1A,$1A,$1A,$1E,$1E,$1E,$04,$00,$00,
 $00,$00,$00,$04,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$04,$00,$00,$00,
 $00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$00,
 $00,$00,$04,$1D,$1D,$04,$04,$1D,$1D,$04,$04,$1D,$1D,$04,$00,$00,
 $00,$00,$04,$1D,$1D,$0E,$0E,$1D,$0E,$1D,$1D,$1D,$1D,$04,$00,$00,
 $00,$00,$00,$04,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D,$04,$00,$00,$00,
 $00,$00,$00,$04,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$1E,$04,$00,$00,$00,
 $00,$00,$04,$1E,$1E,$08,$08,$08,$08,$08,$08,$1E,$1E,$04,$00,$00,
 $00,$04,$1E,$1E,$08,$08,$08,$08,$08,$08,$08,$08,$1E,$1E,$04,$00,
 $00,$04,$1E,$08,$08,$0E,$0E,$08,$08,$0E,$0E,$08,$08,$1E,$04,$00,
 $04,$1E,$1E,$08,$08,$0E,$04,$08,$08,$04,$0E,$08,$08,$1E,$1E,$04,
 $04,$1E,$1E,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$1E,$1E,$04,
 $04,$1E,$1E,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$1E,$1E,$04,
 $00,$04,$1E,$08,$08,$1A,$08,$08,$08,$08,$1A,$08,$08,$1E,$04,$00,
 $00,$00,$04,$08,$08,$08,$1A,$1A,$1A,$1A,$08,$08,$08,$04,$00,$00,
 $00,$00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,$00,
 $00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$04,$04,$04,$04,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$04,$0C,$0C,$0C,$0C,$04,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$0C,$0C,$0C,$0C,$0C,$0C,$04,$00,$00,$00,$00,
 $00,$00,$04,$04,$04,$0F,$0F,$0F,$0F,$0F,$0F,$04,$04,$04,$00,$00,
 $00,$04,$11,$11,$10,$10,$10,$10,$10,$10,$11,$11,$11,$11,$04,$00,
 $00,$00,$04,$04,$1B,$1B,$1B,$1B,$1B,$1B,$1B,$1B,$04,$04,$00,$00,
 $00,$00,$04,$1B,$08,$08,$08,$08,$08,$08,$08,$08,$1B,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$1B,$1B,$08,$08,$1B,$1B,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$0E,$04,$08,$08,$04,$0E,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$1B,$08,$1B,$1B,$08,$1B,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$1B,$1B,$1A,$1A,$1B,$1B,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$1A,$0E,$0E,$1A,$08,$08,$08,$04,$00,$00,
 $00,$00,$00,$04,$08,$08,$08,$1A,$1A,$08,$08,$08,$04,$00,$00,$00,
 $00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$14,$14,$04,$04,$14,$14,$04,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$14,$14,$14,$14,$14,$14,$04,$00,$00,$00,$00,
 $00,$00,$04,$04,$04,$02,$02,$1E,$1E,$02,$02,$04,$04,$04,$00,$00,
 $00,$04,$14,$14,$14,$14,$14,$14,$14,$14,$14,$14,$14,$14,$04,$00,
 $00,$00,$04,$04,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$04,$04,$00,$00,
 $00,$00,$04,$0D,$08,$08,$08,$08,$08,$08,$08,$08,$0D,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$08,$05,$05,$05,$05,$05,$05,$05,$05,$08,$04,$00,$00,
 $00,$00,$04,$08,$05,$05,$05,$08,$08,$05,$05,$05,$08,$04,$00,$00,
 $00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,
 $00,$00,$04,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$04,$00,$00,
 $00,$00,$04,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$1A,$0D,$0D,$04,$00,$00,
 $00,$00,$04,$0D,$0D,$0D,$1A,$1A,$1A,$1A,$0D,$0D,$0D,$04,$00,$00,
 $00,$00,$00,$04,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$0D,$04,$00,$00,$00,
 $00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00,
 $00,$04,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$04,$00,
 $04,$0C,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$0C,$04,
 $04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,
 $04,$08,$08,$0C,$0C,$0C,$0C,$08,$08,$0C,$0C,$0C,$0C,$08,$08,$04,
 $04,$08,$08,$08,$0E,$04,$0E,$08,$08,$0E,$04,$0E,$08,$08,$08,$04,
 $04,$08,$08,$08,$15,$15,$15,$08,$08,$15,$15,$15,$08,$08,$08,$04,
 $04,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$04,
 $04,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$0C,$04,
 $04,$0C,$0C,$0C,$0C,$1A,$1A,$1A,$1A,$1A,$1A,$0C,$0C,$0C,$0C,$04,
 $04,$0C,$0C,$0C,$1A,$1E,$14,$1E,$1E,$1E,$1E,$1A,$0C,$0C,$0C,$04,
 $04,$0C,$0C,$0C,$1A,$04,$04,$04,$04,$04,$04,$1A,$0C,$0C,$0C,$04,
 $04,$0C,$0C,$0C,$1A,$1E,$1E,$1E,$1D,$1E,$1E,$1A,$0C,$0C,$0C,$04,
 $00,$04,$0C,$0C,$0C,$1A,$1A,$1A,$1A,$1A,$1A,$0C,$0C,$0C,$04,$00,
 $00,$00,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$00,$00),
($00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$04,$04,$00,$00,$04,$04,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$0C,$0C,$04,$04,$0C,$0C,$04,$00,$00,$00,$00,
 $00,$00,$00,$00,$04,$0C,$0C,$0C,$0C,$0C,$0C,$04,$00,$00,$00,$00,
 $00,$00,$00,$04,$04,$12,$12,$15,$15,$12,$12,$04,$04,$00,$00,$00,
 $00,$00,$04,$11,$11,$11,$10,$10,$10,$11,$11,$11,$11,$04,$00,$00,
 $00,$00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$04,$00,$00,$00,
 $00,$00,$00,$04,$08,$04,$04,$08,$08,$04,$04,$08,$04,$00,$00,$00,
 $00,$00,$00,$04,$08,$0E,$04,$08,$08,$04,$0E,$08,$04,$04,$00,$00,
 $00,$00,$00,$04,$08,$08,$08,$08,$08,$08,$08,$08,$04,$12,$04,$00,
 $00,$00,$00,$04,$12,$12,$12,$12,$12,$12,$12,$12,$12,$04,$00,$00,
 $00,$00,$00,$04,$12,$12,$12,$12,$12,$12,$12,$12,$04,$12,$04,$00,
 $00,$00,$00,$00,$04,$12,$12,$12,$12,$12,$12,$04,$00,$04,$00,$00,
 $00,$00,$00,$00,$00,$04,$04,$04,$04,$04,$04,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,
 $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00));

{ Renvoie le num‚ro du niveau correspondant au code }
function StageCode (Code: Word): Byte;

implementation

const
  { Tous les codes de niveaux sous leurs formes cod‚s }
  CodeStage: array[0..15] of LongInt =
    ($00000000,$FBACDDCF,$46C543C2,$7DC49960,
     $68D9A67C,$5D2D9EEF,$07F55D9A,$90637281,
     $FFC37A0D,$B021CAFC,$169F1A93,$9FDE056D,
     $5F13B4A5,$320945CE,$0214D83B,$C633608D);

{ Transforme un code normal en cod‚ }
function EnCode (Code: Word): LongInt; assembler;
asm
        DB	66h
        XOR	AX,AX
        DB	66h
        XOR	BX,BX
	MOV	AX,Code
        MOV	BX,AX
        MOV	CL,AL
        AND	CL,7
        ROL	AX,CL
	ADD	AX,BX
        DB	66h
        SHL	AX,16
        MOV	AX,BX
        XCHG	BL,BH
        DB	66h
        SHL	BX,CL
        DB	66h
        ADD	AX,BX
        MOV	CL,BL
        AND	CL,7
        DB	66h
        ROL	AX,CL
        MOV	BX,AX
        DB	66h
        SHR	AX,16
        MOV	DX,AX
        MOV	AX,BX
end;

function StageCode;
var
  CodeTransforme: LongInt;
  i: Byte;
begin
  CodeTransforme := EnCode (Code);
  i := 0;
  while (CodeStage[i] <> CodeTransforme) and (i < 16) do inc (i);
  StageCode := i;
end;

end.
